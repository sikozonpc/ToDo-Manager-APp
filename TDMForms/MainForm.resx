<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="addNewTaskButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAB4CAYAAACuNZEIAAAABGdBTUEAALGPC/xhBQAACN9JREFUeF7t
        m72LnFUUxvevslcbC8VW0cJCIaVC0sVCKy1iY6pYmC6C6SKYMmIaYUMCgUiigQhxJ0QIJJvggoFxf3fO
        s3nmzH3n/cjOrsh94PDej/N9z73vndnZrYaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoF4cuPa/NdP
        TsxvvPv2/JdXX1mh7bder4473fn01BJfTQaeMHl8ePb7neLcprE32ylBk9hHV386vsBnF78rjhwFqKBn
        v90u9kh0uHC0wPhfl38IlzYLJfbmh++V9rGsdG11ScCjq1fms+8vlPb989/Mb318osz9cfar+d6DndJ+
        fP1aWbG92Z8HfXD3i8/mt0+fmt//9lwpYfDwx0tlVYXbp0+WoMONo0MtYMZElGHXYSbyeRLENtGhxUF1
        86P3SzufFSSG8XDlaIBBB6vEWCaCqp28PucnPW3N3/3y81IZPDNIEDzhzuaBsQw5+rJE8GwH9bveBkoO
        lRFubQ4YymCM1ZCjXVRbdZUvpcwTPRB8vO+7sP3ma4UfnnBtM8CI45/dJwdOTyVWLCeC1SNB6wAfcuHa
        ZoARx9P9U1f7cCzlICEvaYLug3j3Hu68ES4eLnLWdTGA/OAZkgR4tLouS6C8c4e+75FBfiOXExQ7KGkP
        jr04JNja6mpcWyQndx041ZE99KBxxEHABAnJqAewjjKv+gQMUd5jID2HWt4odHBrovzyKa1Tt49YRYLz
        koYIlvGx0BYJd18eKGNVHQoO59X21RpS4pDL81z3WloH9BzaOxpnHPm1pAyrP4Q8KcjSpmK06rOLF8La
        MPDREtlw+eWAIl9h2uxdxnXtc5LTNfJEQR40hF5WWW19FhcPSUGGNny+BeDBn3B7OlBKBh1ynODktJ65
        XSMF4clxGd28IHgUKEQiKH/a+TWGbLg9HSjhsuHg0CLDGJbzkJxUv0Yky1e6xk+QjHOQQbSVHAKVTD7V
        GQu3p4PsOlhtHTQEzlPG5Sj9WiBOed6TQFBaRfqspNr5VeigH25PB45kyDiGOR1xQg5rbioRqEradSnJ
        zKndl9QIYRxQ6tApjTOQrwzU54RTll1H2AqXBgHdJCa6w5EDBn2r2Bf0Onk/yCCd3OHOKCAfzeFAyF9L
        eufhdO21NJU8CbRJGuWrQyvcGQV0RXM4EHIQsBwi+3KQEsqrM5Q8WIhS5GxApw6scKeALwOiuXVv34do
        bt0/f26JD12jv/kksOe2wrS9ZLVX1GfO58cSSVPilAj0hTsFzu+EL8FSwNjoT1MY85IGKM5B0WdcfW+P
        JdfN/s33ZOeFxF8LePQKI+SgpNlXXobrSjknpkZKDnuWJ7qR85UOdwqw73KQ7ARLAf3RBx77NN+lPVhR
        DgxnanxOms+ytSSFOwW1eSgnhjF4ozsMCOS7NAeJ9i2BdTkwlvItSsRKhzsFBFbjo0KCpUA80R2GWsCM
        uVGtFI4NvQXVqEsmXDlAjQciYcFS8Pds9gG+sUD6VkTbQbRyOWHQQUnDRHDaQ+v2cB8he/2d5VK8d/ZM
        OSf421UMLUF/gqlRsKyA1xcJQDaGymuMJEd3gbyHgVYiP/VeFvXt4xVjA4FOfxVC9PMKTwLKMnQD0gpz
        9OfVVhK6CB04HmZGgdXSiQ5hS1/1Bst0oDBDAWKUADHYF6CIIMW7sn8GQrqkR/anJnAJBObgpoURfcVC
        W2Urw7RrJH5KTxUSZgpc1nWhH376JFs8jKui0IVexmjzpM88bfV7KwFlGawsxnXiuaMKCsKI2jXCmTBT
        4HPIul4v4UzMaU8jIzkFKj4Fj99hchUI115LKCA4tdc5BKn0vc3rIswU6GujLDuEPNGyk8edwuQqmPQP
        DwDHKAscz4G6MchXSryUFmM4E2YKyDwB+6pkfWPJdUHSFyZXwWQGDrswhLMkQP11JD7kw0yB9ql4SIhX
        kWR45kC6qMaX7S6BVXHwpxYcQ5EH6E45aTyXFjp4hpkCzdXK2veof/HQleRaoPIhV9YSMJD3sBSQDFec
        g3JS4J4Y2mGmgCRAnKReBTyVYGx4hdHPdtV3WxBbkSc2wuQqEMqflrSHUcw8gWflXYTT8PKEwswo8BMp
        2VUS0E1SgmU6UOQrTFsri9GhgcLnMjjKeJgZBb7iQUct0cEyHShxcGJ7VseQgqVN2dK+9/WZ0U4qYN9O
        7HESECzTgeIMHTh6Dglee1ABQ8gROHqYp4/jWV+4cgB4PVi10R0sS2CudhBCnAfBtgBK9NNB8Pj6djFQ
        M9hHORAPXpR1rTi0jy45KFgK+Jip+XUI9gVQnsGYTkpRzYkuyrzrZAki3305NLN9ypmEBkuB5voQ7Asg
        kD8PK5vMyVl3mva6IIZQlg93CvQjtUz51GfMf7DahWBfACEHwTMmh7xMtQfVF5GcXM5DCTv5vYkuJTxT
        sBTQf/50NzzvRrAvgFCGTkS9Wty4lxrOwqP5WtDwSB9tJTJTuFMgvZmntsJ7D2bhdTeCfQGEHPwwjaDk
        qC4h8MlZnlz/mCMQxjiNeTqhB8pVQR/n0SOd4U4B34FpHPJ2sBTQH13SKDtu4EO4MwoETOL7EOwLUI7H
        jbxyQ4EcVdaHYF9An0yOE1NXmG0xBMH+AgQs4uIO6X6tSwnPh5cvlTY/guH7X5UT/wPx6Ocrpf18d3d+
        5/TJ8j8O8PC/E1xX9T8UnBGL/5PY2d/3i99r3Yr9zGmNLN8v49fjG9vFWfWZJ0idC5MD5lt7SgMFBI1x
        Sp0+h5JOZsYZE+VXB/MkgafG4ME5dND2OQj9usKKX/ZqNiC9ttAlffBih77k1Y8wF0C47x2anewi1yNH
        h8qKxF8LtIsk47ZoQwQfoS7+K40s4CgTOaOuINO6uf8aRbgvgPMES9B650L0lQDmNe7zaqvMeCoZOSnw
        uwzzotqKMq6yhPI8MpKr8cjnCHM4SIKuf7SlnMuGDLIX2b/wERTzzOEwTxlXQnRRoa1k0dfBJF7OFnTQ
        hwcbPDVHlSKzsX8ZaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGj4/2Jr61+RiqztNy7fDAAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="removeTaskButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>